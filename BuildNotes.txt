Build Notes for xAutoPause - Updated 22/11/2016

X-Plane 11 Specific Notes:

System requirements: http://www.x-plane.com/kb/x-plane-11-system-requirements/

64 bit only.
OS X Yosemite ->
Windows 7 ->
Linux Ubuntu 14.04 & 16.04 LTS or equivalent ->



General Notes:

See http://http://www.xsquawkbox.net/xpsdk/mediawiki/BuildInstall for X-Plane SDK build notes.

Targeting:
X-Plane 9.0 onwards - define XPLM200 - Fat Plugins ONLY.
X-Plane 10.0 onwards - define XPLM200 AND XPLM210 - Fat Plugins ONLY.

#Plugin folder architecture
 mac.xpl      <- mac dylib with multiple code architectures: ppc, i386, x86_64
  32
   win.xpl    <- 32-bit (win32) windows dll
   lin.xpl    <- 32-bit (i386) Linux shared object
   optional other 32-bit dlls needed
  64
   win.xpl    <- 64-bit (x64) windows dll
   lin.xpl    <- 64-bit (x86_64) Linux shared object
   optional other 64-bit dlls needed
 other files for the plugin (pngs, etc.) in any sub folders as desired.

Windows
********
#Preprocessor directives:
IBM=1

#Compiler Notes:
Using pre-compiled header stdafx.h
Using windows.cpp

#Suppressed Warnings
C4244 - Conversion from 'double' to 'float' possible loss of data.
C4996 - Unsafe string warning - enhanced version contains buffer length.

#Compiler Flags


#Linker
XPLM & XPWidgets 86/64 libraries linked.


#Notes:

Using MS Visual Studio 2015

Linux
******
#Preprocessor directives:
LIN=1

#Compiler Flags:
-fPIC


#Notes:

Using VMWare Ubuntu VM
Using CodeBlocks

Boolean values true and false MUST be lower case for C++ compilation under GCC on Linux.

MAC
****
#Preprocessor directives:
APL=1

#Compiler Flags:
-fPIC



#Linker
XPLM & XPWidgets 86/64 frameworks linked.


#Linker Flags:
-framework XPLM
-framework XPWidgets
-F<path-to-Framework-files>

#Notes:

Using VMWare MAC OSX Sierra
	VMWare VM Settings:
	MacBookPro Emulation
	VM Type - MAC OSX Yosemite (Sierra not in list)
	Processors - Same as physical PC
	Chipset - PIIX3
	Memory - 4GB
	Video Memory - 128MB
	Floppy - Disable

	Installed XCode
	NB XCode on macOS VM only sees devices connected via USB2.0 emulated interface irrespective of host USB physical connection.

Using CodeBlocks
